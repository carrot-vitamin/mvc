<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 引入配置文件 -->
    <!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" /> </bean> -->

    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://192.168.146.149:3306/test?useUnicode=true&amp;characterEncoding=UTF-8" />
        <property name="username" value="root" />
        <property name="password" value="qwer1234" />
    </bean>-->

    <!--载入 jdbc 配置文件-->
    <!--<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>-->

    <!-- 阿里 druid 数据库连接池 访问监控页面： http://ip:port/projectName/druid/index.html -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${druid.datasource.url}"/>
        <property name="username" value="${druid.datasource.username}"/>
        <property name="password" value="${druid.datasource.password}"/>
        <property name="driverClassName" value="${druid.datasource.driverClassName}"/>
        <property name="filters" value="${druid.datasource.filters}"/>
        <property name="maxActive" value="${druid.datasource.maxActive}"/>
        <property name="initialSize" value="${druid.datasource.initialSize}"/>
        <property name="maxWait" value="${druid.datasource.maxWait}"/>
        <property name="minIdle" value="${druid.datasource.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${druid.datasource.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${druid.datasource.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${druid.datasource.validationQuery}"/>
        <property name="testWhileIdle" value="${druid.datasource.testWhileIdle}"/>
        <property name="testOnBorrow" value="${druid.datasource.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.datasource.testOnReturn}"/>
        <property name="maxOpenPreparedStatements" value="${druid.datasource.maxOpenPreparedStatements}"/>
        <property name="removeAbandoned" value="${druid.datasource.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${druid.datasource.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${druid.datasource.logAbandoned}"/>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath*:/META-INF/mappers/*Mapper.xml"/>
        <!--pagehelper分页插件配置-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            helperDialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--扫描bean上的注解-->
    <context:component-scan base-package="com.project.*.service"/>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.project.*.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 配置事务的两种方法 MySql无效 -->
    <!-- 方法一： -->
    <!-- 配置需要加入事务的方法规则，或者说是一个切面 -->
    <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" />
            <tx:method name="find*" />
        </tx:attributes>
    </tx:advice> -->
    <!-- 把事务控制在service层 -->
    <!-- <aop:config>
        <aop:pointcut id="servicePointcut" expression="execution(* com.project..*Service.*(..))" />
        <aop:advisor pointcut-ref="servicePointcut" advice-ref="txAdvice" />
    </aop:config> -->

    <!-- 方法二： -->
    <!-- 通过在方法上注解 @Transactional 来开启事务 -->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

</beans>